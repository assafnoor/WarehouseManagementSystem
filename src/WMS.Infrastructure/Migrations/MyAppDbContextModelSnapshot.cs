// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WMS.Infrastructure.Persistence;

#nullable disable

namespace WMS.Infrastructure.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    partial class MyAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WMS.Domain.BalanceAggregate.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfMeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId", "UnitOfMeasurementId")
                        .IsUnique();

                    b.ToTable("Balances", (string)null);
                });

            modelBuilder.Entity("WMS.Domain.ClientAggregate.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("WMS.Domain.ReceiptDocumentAggregate.ReceiptDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReceiptDocuments", (string)null);
                });

            modelBuilder.Entity("WMS.Domain.ResourceAggregate.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Resources", (string)null);
                });

            modelBuilder.Entity("WMS.Domain.ShipmentDocumentAggregate.ShipmentDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ShipmentDocuments", (string)null);
                });

            modelBuilder.Entity("WMS.Domain.UnitOfMeasurementAggregate.UnitOfMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UnitsOfMeasurement", (string)null);
                });

            modelBuilder.Entity("WMS.Domain.BalanceAggregate.Balance", b =>
                {
                    b.OwnsOne("WMS.Domain.Common.ValueObjects.Quantity", "Quantity", b1 =>
                        {
                            b1.Property<Guid>("BalanceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Quantity");

                            b1.HasKey("BalanceId");

                            b1.ToTable("Balances");

                            b1.WithOwner()
                                .HasForeignKey("BalanceId");
                        });

                    b.Navigation("Quantity")
                        .IsRequired();
                });

            modelBuilder.Entity("WMS.Domain.ClientAggregate.Client", b =>
                {
                    b.OwnsOne("WMS.Domain.Common.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ClientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("City");

                            b1.Property<string>("PostalCode")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("Street")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Street");

                            b1.HasKey("ClientId");

                            b1.ToTable("Clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("WMS.Domain.ReceiptDocumentAggregate.ReceiptDocument", b =>
                {
                    b.OwnsMany("WMS.Domain.ReceiptDocumentAggregate.Entites.ReceiptResource", "ReceiptResources", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.Property<DateTime>("CreatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("ReceiptDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ResourceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("UnitOfMeasurementId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("UpdatedDateTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id");

                            b1.HasIndex("ReceiptDocumentId");

                            b1.ToTable("ReceiptResources", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ReceiptDocumentId");

                            b1.OwnsOne("WMS.Domain.Common.ValueObjects.Quantity", "Quantity", b2 =>
                                {
                                    b2.Property<Guid>("ReceiptResourceId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Value")
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("Quantity");

                                    b2.HasKey("ReceiptResourceId");

                                    b2.ToTable("ReceiptResources");

                                    b2.WithOwner()
                                        .HasForeignKey("ReceiptResourceId");
                                });

                            b1.Navigation("Quantity")
                                .IsRequired();
                        });

                    b.Navigation("ReceiptResources");
                });

            modelBuilder.Entity("WMS.Domain.ShipmentDocumentAggregate.ShipmentDocument", b =>
                {
                    b.OwnsMany("WMS.Domain.ShipmentDocumentAggregate.Entites.ShipmentResource", "ShipmentResources", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.Property<DateTime>("CreatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("ResourceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ShipmentDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("UnitOfMeasurementId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("UpdatedDateTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id");

                            b1.HasIndex("ShipmentDocumentId");

                            b1.ToTable("ShipmentResources", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ShipmentDocumentId");

                            b1.OwnsOne("WMS.Domain.Common.ValueObjects.Quantity", "Quantity", b2 =>
                                {
                                    b2.Property<Guid>("ShipmentResourceId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Value")
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("Quantity");

                                    b2.HasKey("ShipmentResourceId");

                                    b2.ToTable("ShipmentResources");

                                    b2.WithOwner()
                                        .HasForeignKey("ShipmentResourceId");
                                });

                            b1.Navigation("Quantity")
                                .IsRequired();
                        });

                    b.Navigation("ShipmentResources");
                });
#pragma warning restore 612, 618
        }
    }
}
